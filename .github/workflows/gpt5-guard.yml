name: GPT-5 Merge Guard

on:
  pull_request:
    types: [opened, edited, synchronize, reopened]

jobs:
  guard:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check for GPT-5 env changes
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr = context.payload.pull_request;
            if (!pr) {
              core.info('No pull_request payload found; skipping guard.');
              return;
            }
            const labelAllowed = (pr.labels || []).some(l => l && l.name === 'gpt5-approve');
            if (labelAllowed) {
              core.info('gpt5-approve label present â€” skipping guard');
              return;
            }
            let files;
            try {
              // Use the REST namespace of Octokit in newer github-script versions
              files = await github.rest.pulls.listFiles({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: pr.number,
              });
            } catch (err) {
              core.warning(`Failed to list PR files: ${err.message}`);
              return;
            }
            const keywords = ['ENABLE_GPT5', 'ENABLE_GPT5_ALLOW', 'OPENAI_API_KEY'];
            for (const f of files.data) {
              const patch = f.patch || '';
              for (const kw of keywords) {
                if (patch.includes(kw)) {
                  core.setFailed(`PR modifies or adds ${kw}. Add label 'gpt5-approve' to bypass.`);
                }
              }
            }
